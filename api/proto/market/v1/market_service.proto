syntax = "proto3";

package market.v1;

import "market/v1/product.proto";
import "google/api/annotations.proto";
import "google/api/resource.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/httpbody.proto";

service MarketService {
	// Get existing product from the market
	rpc GetProduct (GetProductRequest) returns (GetProductResponse) {
		option (google.api.http) = {
			get: "/v1/{product.uid=products/*}"
		};
		option (google.api.method_signature) = "product";
	}

	rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {
		option (google.api.http) = {
			get: "/v1/products"
		};
	}

	rpc PurchaseProduct (PurchaseProductRequest) returns (PurchaseProductResponse) {
		option (google.api.http) = {
			post: "/v1/{product.uid=products/*}"
		};
	}
	
	rpc RegisterPublisher (RegisterPublisherRequest) returns (RegisterPublisherResponse) {

	}

	rpc CheckMarketHealth(CheckMarketHealthRequest) returns (CheckMarketHealthResponse) {

	}
}

message PurchaseProductRequest {
	Product product = 1 [(google.api.field_behavior) = REQUIRED];
}

message PurchaseProductResponse {
	Product product = 1;
	string nft = 2;
}

message GetProductRequest {
	Product product = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetProductResponse {
	Product product = 1;
}

message ListProductsRequest {
	
}
	
message ListProductsResponse {
	repeated Product product = 1;
}

message RegisterPublisherRequest {
	// account
	string account = 1;
	// server connection
	string connection = 2;
}

message RegisterPublisherResponse {

}

message CheckMarketHealthRequest {

}

message CheckMarketHealthResponse {

}

